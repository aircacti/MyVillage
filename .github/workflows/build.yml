permissions:
  contents: write

name: Build and Release MyVillage

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 21

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Extract version from pom.xml
      id: get_version
      run: |
        VERSION=$(grep -m1 '<version>' pom.xml | sed -E 's:.*<version>([^<]+)</version>.*:\1:')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version is '$VERSION'"


    - name: Get short SHA
      id: short_sha
      run: |
        echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        echo "Short SHA is '${GITHUB_SHA::7}'"


    - name: Check if version is dev (case insensitive)
      id: check_dev
      run: |
        version="${{ steps.get_version.outputs.version }}"
        version_lower=$(echo "$version" | tr '[:upper:]' '[:lower:]')
        echo "Lowercase version is '$version_lower'"
        if echo "$version_lower" | grep -q "dev"; then
          echo "is_dev=true" >> $GITHUB_OUTPUT
          echo "Detected dev version."
        else
          echo "is_dev=false" >> $GITHUB_OUTPUT
          echo "Detected stable version."
        fi

    - name: Build JAR with Maven Shade plugin
      run: mvn clean package

    - name: List files in target after build
      run: ls -l target

    - name: Upload artifact for dev versions
      if: steps.check_dev.outputs.is_dev == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: MyVillage-${{ steps.get_version.outputs.version }}-${{ github.run_number }}-${{ steps.short_sha.outputs.sha }}.jar
        path: target/*-shaded.jar

    - name: Create GitHub Release for stable versions
      if: steps.check_dev.outputs.is_dev == 'false'
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: "Release of version ${{ steps.get_version.outputs.version }}."
        draft: false
        prerelease: false

    - name: Upload release asset
      if: steps.check_dev.outputs.is_dev == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        files: target/*-shaded.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
